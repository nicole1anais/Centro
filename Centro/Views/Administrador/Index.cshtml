@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Administrador</title>

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&family=Roboto:wght@300;400&display=swap" rel="stylesheet">

    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css">

    <!-- CSS Personalizado -->
    <link rel="stylesheet" href="~/css/administrador.css" asp-append-version="true" />
</head>
<body style="background-color: #f8f9fa; font-family: 'Roboto', sans-serif;">

    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-light bg-light shadow-sm">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">
                <img src="~/im/GONU.JPG" height="50" width="50" alt="logo"> <span style="font-family: 'Poppins', sans-serif;">PROFESIONALESGONU</span>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item"><a class="nav-link text-dark" asp-controller="Home" asp-action="Index">Inicio</a></li>
                    <li class="nav-item"><a class="nav-link text-dark" asp-controller="Profesionales" asp-action="Index">Profesionales</a></li>
                    <li class="nav-item"><a class="nav-link text-dark" asp-controller="Citas" asp-action="List">Citas</a></li>
                    <li class="nav-item"><a class="nav-link text-dark" asp-controller="Contacto" asp-action="List">Contactos</a></li>
                    <li class="nav-item"><a class="nav-link text-dark" asp-controller="Usuarios" asp-action="Index">Usuarios</a></li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle text-dark" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <img src="~/im/logo.png" height="20" width="20" alt="user icon">
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                            @if (User.Identity.IsAuthenticated)
                            {
                                <li><a class="dropdown-item" asp-controller="Auth" asp-action="LogOut">Salir</a></li>
                            }
                            else
                            {
                                <li><a class="dropdown-item" asp-controller="Auth" asp-action="Login">Acceso Administrativo</a></li>
                            }
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Contenedor principal -->
    <div class="container py-4">
        <h1 class="text-center" style="font-family: 'Poppins', sans-serif; font-weight: 600; color: #3a3a3a;">Panel de Administración</h1>

        <!-- Estadísticas -->
        <div class="row g-4">
            <div class="col-md-3">
                <div class="p-3 bg-white rounded shadow-sm text-center">
                    <h3 class="text-primary">@ViewBag.numDeCitasMes</h3>
                    <p class="text-muted">Citas del último mes</p>
                </div>
            </div>
            <div class="col-md-3">
                <div class="p-3 bg-white rounded shadow-sm text-center">
                    <h3 class="text-secondary">@ViewBag.numContactos</h3>
                    <p class="text-muted">Contactos recibidos</p>
                </div>
            </div>
            <div class="col-md-3">
                <div class="p-3 bg-white rounded shadow-sm text-center">
                    <h3 class="text-success">@ViewBag.numProfesionales</h3>
                    <p class="text-muted">Profesionales activos</p>
                </div>
            </div>
            <div class="col-md-3">
                <div class="p-3 bg-white rounded shadow-sm text-center">
                    <h3 class="text-info">@ViewBag.recaudacionMes</h3>
                    <p class="text-muted">Ingresos del último mes</p>
                </div>
            </div>
        </div>

        <!-- Gráficos -->
        <div class="row my-4">
            <div class="col-md-4">
                <div class="p-3 bg-white rounded shadow-sm">
                    <h5 class="text-center">Citas últimos 3 meses</h5>
                    <canvas id="barChart"></canvas>
                </div>
            </div>
            <div class="col-md-4">
                <div class="p-3 bg-white rounded shadow-sm">
                    <h5 class="text-center">Citas por profesional</h5>
                    <canvas id="pieChart"></canvas>
                </div>
            </div>
            <div class="col-md-4">
                <div class="p-3 bg-white rounded shadow-sm">
                    <h5 class="text-center">Proyección de ingresos por cita</h5>
                    <canvas id="lineChart"></canvas>
                </div>
            </div>
        </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <!-- Lógica de gráficos -->
    <script>
        function obtenerNombreMes(indiceMes) {
            const nombresMeses = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];
            return nombresMeses[indiceMes];
        }

        const fechaActual = new Date();
        const mesActual = fechaActual.getMonth();
        const meses = [
            obtenerNombreMes(mesActual),
            obtenerNombreMes((mesActual + 1) % 12),
            obtenerNombreMes((mesActual + 2) % 12)
        ];

        const numDeCitasMes = @ViewBag.numDeCitasMes || 0; // Asegúrate de que sea un número

        var datosCitas = {
            meses: meses,
            citasPorMes: [0, 5, numDeCitasMes]
        };

        var datosProfesionales = {
            mProfesionales: @Html.Raw(Json.Serialize(ViewBag.nombresProfesionales)),
            citasProfesionales: @Html.Raw(Json.Serialize(ViewBag.citasPorProfesionales))
        };

        // Gráfico de barras
        var ctxBar = document.getElementById('barChart').getContext('2d');
        var barChart = new Chart(ctxBar, {
            type: 'bar',
            data: {
                labels: datosCitas.meses,
                datasets: [{
                    label: 'Citas en los últimos 3 meses',
                    data: datosCitas.citasPorMes,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Gráfico de torta
        var ctxPie = document.getElementById('pieChart').getContext('2d');
        var pieChart = new Chart(ctxPie, {
            type: 'pie',
            data: {
                labels: datosProfesionales.mProfesionales,
                datasets: [{
                    data: datosProfesionales.citasProfesionales,
                    backgroundColor: ['red', 'green', 'blue']
                }]
            }
        });

        // Gráfico de línea
        var ctxLine = document.getElementById('lineChart').getContext('2d');
        var lineChart = new Chart(ctxLine, {
            type: 'line',
            data: {
                labels: ['Septiembre', 'Octubre', 'Noviembre'],
                datasets: [{
                    label: 'Proyección de ingresos por citas',
                    data: [0, @ViewBag.recaudacionMes + 50000, @ViewBag.recaudacionMes + 75000],
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1,
                    fill: false
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        function mostrarModalInactividad() {
            const modalHtml = `
                <div id="modalInactividad" class="modal">
                    <div class="modal-content">
                        <h2>Inactividad detectada</h2>
                        <p>¿Deseas cerrar sesión o continuar navegando?</p>
                        <div id="timer">30</div>
                        <button id="cerrarSesion">Cerrar Sesión</button>
                        <button id="continuarNavegando">Continuar Navegando</button>
                    </div>
                </div>`;
            document.body.insertAdjacentHTML('beforeend', modalHtml);

            const modal = document.getElementById('modalInactividad');
            const timerElement = document.getElementById('timer');
            let countdown = 30;

            const intervalId = setInterval(() => {
                countdown--;
                timerElement.textContent = countdown;
                if (countdown <= 0) {
                    clearInterval(intervalId);
                    cerrarSesion();
                }
            }, 1000);

            document.getElementById('cerrarSesion').addEventListener('click', cerrarSesion);
            document.getElementById('continuarNavegando').addEventListener('click', () => {
                clearInterval(intervalId);
                modal.remove();
                iniciarTemporizadorInactividad();
            });
        }

        function cerrarSesion() {
            window.location.href = '/Auth/LogOut';
        }

        let temporizadorInactividad;

        function iniciarTemporizadorInactividad() {
            clearTimeout(temporizadorInactividad);
            temporizadorInactividad = setTimeout(mostrarModalInactividad, 60000); // 1 minuto
        }

        document.addEventListener('mousemove', iniciarTemporizadorInactividad);
        document.addEventListener('keypress', iniciarTemporizadorInactividad);
        document.addEventListener('mousedown', iniciarTemporizadorInactividad);
        document.addEventListener('touchstart', iniciarTemporizadorInactividad);

        iniciarTemporizadorInactividad(); // Iniciar el temporizador al cargar la página
    </script>
</body>
</html>